# Generated by Django 3.0.5 on 2021-11-15 09:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='SiteUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('seller', models.BooleanField(default=False)),
                ('content', models.TextField(blank=True, verbose_name='Описание')),
                ('picture', models.ImageField(blank=True, upload_to='')),
                ('categories', models.ManyToManyField(blank=True, related_name='sellers', to='freeldb.Category')),
            ],
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('char', models.CharField(choices=[('-1', 'Отрицательный'), ('0', 'Нейтральный'), ('1', 'Положительный')], default='0', max_length=10, verbose_name='Характер отзыва')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('viewed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views_about', to=settings.AUTH_USER_MODEL)),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views_from', to='freeldb.SiteUser')),
            ],
        ),
        migrations.CreateModel(
            name='PortProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('files', models.FileField(upload_to='static/')),
                ('prev', models.ImageField(blank=True, upload_to='images/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='freeldb.Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to='freeldb.SiteUser')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('name', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(300)], verbose_name='Цена')),
                ('unit', models.CharField(choices=[('$', 'Доллар США'), ('руб.', 'Рубль'), ('€', 'Евро')], default='руб.', max_length=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('files', models.FileField(blank=True, upload_to='static/')),
                ('status', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='freeldb.Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='freeldb.SiteUser')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='', verbose_name='Содержание')),
                ('unit', models.CharField(choices=[('$', 'Доллар США'), ('руб.', 'Рубль'), ('€', 'Евро')], default='руб.', max_length=10, verbose_name='Валюта')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('time', models.IntegerField(verbose_name='Срок (в днях)')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='freeldb.Order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='freeldb.SiteUser')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=100, verbose_name='Название')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('files', models.FileField(blank=True, upload_to='static/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='freeldb.SiteUser')),
            ],
        ),
    ]
